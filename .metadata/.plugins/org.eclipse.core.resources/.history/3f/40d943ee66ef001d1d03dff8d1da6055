package pirkovic.andrea;
//4 vertices (A, B, C, and D) and 3 edges: A to B, B to C, and C to D which are represented using adjacency matrix.
public class OneDirectional {
	
		  static int[][] matrix; // Adjacency matrix
		  static int numVertices; // Number of vertices or nodes

		  public static void main(String[] args) {
		    // Set the number of vertices
		    numVertices = 4;

		    // Initialize the adjacency matrix
		    matrix = new int[numVertices][numVertices];

		    // Add some edges
		    matrix[0][1] = 1;
		    matrix[1][2] = 1;
		    matrix[2][3] = 1;

		 
		    
		 // Print the adjacency matrix
		    System.out.print("  ");
		    for (int i = 0; i < numVertices; i++) {
		      System.out.print((char)('A' + i) + " ");
		    }
		    System.out.println();
		    for (int i = 0; i < numVertices; i++) {
		      System.out.print((char)('A' + i) + " ");
		      for (int j = 0; j < numVertices; j++) {
		        System.out.print(matrix[i][j] + " ");
		      }
		      System.out.println();
		    }
		  }
		}

